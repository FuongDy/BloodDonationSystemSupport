import{G as n}from"./index-1dtSQISR.js";const a={createAppointment:async r=>{var t;try{return(await n.post("/appointments",r)).data}catch(e){throw console.error("=== APPOINTMENT SERVICE ERROR (createAppointment) ==="),console.error((t=e.response)==null?void 0:t.data),e}},requestReschedule:async(r,t)=>{var e;try{return(await n.put(`/appointments/${r}/request-reschedule`,t)).data}catch(o){throw console.error("=== APPOINTMENT SERVICE ERROR (requestReschedule) ==="),console.error((e=o.response)==null?void 0:e.data),o}},getMyAppointments:async()=>{var r;try{return(await n.get("/appointments/my-appointments")).data}catch(t){throw console.error("=== APPOINTMENT SERVICE ERROR (getMyAppointments) ==="),console.error((r=t.response)==null?void 0:r.data),t}},getAllAppointments:async(r={})=>{var t;try{return(await n.get("/appointments",{params:r})).data}catch(e){throw console.error("=== APPOINTMENT SERVICE ERROR (getAllAppointments) ==="),console.error((t=e.response)==null?void 0:t.data),e}},updateAppointmentStatus:async(r,t)=>{var e;try{return(await n.put(`/appointments/${r}/status`,{status:t})).data}catch(o){throw console.error("=== APPOINTMENT SERVICE ERROR (updateAppointmentStatus) ==="),console.error((e=o.response)==null?void 0:e.data),o}},getAppointmentsByDonor:async r=>{var t;try{return(await n.get(`/appointments/donor/${r}`)).data}catch(e){throw console.error("=== APPOINTMENT SERVICE ERROR (getAppointmentsByDonor) ==="),console.error((t=e.response)==null?void 0:t.data),e}}};export{a};
