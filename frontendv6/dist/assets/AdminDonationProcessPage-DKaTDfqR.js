import{i as T,j as e,B as j,H as C,C as q,U as I,d as P,r as f,V as m,w as L}from"./index-1dtSQISR.js";import{A as B}from"./AdminPageLayout-DhKAkubx.js";import{A as V}from"./AdminContentWrapper-BZBpLfvq.js";import{D as U}from"./DataTable-CTx3YzN_.js";import{S as K}from"./StatusBadge-D5kv7rFB.js";import{D as G}from"./DateTimeDisplay-BybaiEr8.js";import{D as v}from"./constants-QRcisZg4.js";import{A as F}from"./activity-CxJsYHTd.js";import{P as _}from"./pen-line-CmPajvV1.js";import{f as O}from"./formatters-VVyg-bDD.js";import{M as w}from"./Modal-C4xFU6ku.js";import{I as b}from"./InputField-1_bs09Nb.js";import{d as N}from"./donationService-DH00aI2W.js";import{C as $}from"./circle-check-big-CJhYsvhV.js";import{C as z}from"./circle-x-BJDfqqYQ.js";import{a as Z}from"./appointmentService-grpWjNFB.js";import"./PageHeader-W4hk3_1v.js";import"./Pagination-DEb_1VK8.js";import"./chevron-left-ByYWtYPx.js";import"./chevron-right-B4c0w1B6.js";import"./EmptyState-CqnLvH6d.js";import"./plus-C4tZkhei.js";import"./Badge-DVxHSo1W.js";/**
 * @license lucide-react v0.511.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Q=[["path",{d:"m16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z",key:"7g6ntu"}],["path",{d:"m2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z",key:"ijws7r"}],["path",{d:"M7 21h10",key:"1b0cd5"}],["path",{d:"M12 3v18",key:"108xh3"}],["path",{d:"M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2",key:"3gwbw2"}]],X=T("scale",Q);/**
 * @license lucide-react v0.511.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const J=[["path",{d:"M14.5 2v17.5c0 1.4-1.1 2.5-2.5 2.5c-1.4 0-2.5-1.1-2.5-2.5V2",key:"125lnx"}],["path",{d:"M8.5 2h7",key:"csnxdl"}],["path",{d:"M14.5 16h-5",key:"1ox875"}]],M=T("test-tube",J);/**
 * @license lucide-react v0.511.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const W=[["path",{d:"M14 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z",key:"17jzev"}]],Y=T("thermometer",W),ee=({process:i,onActionClick:p})=>{const o=(t=>{const a=[];switch(t.status){case v.PENDING_APPROVAL:a.push({label:"Duyệt/Từ chối",icon:_,variant:"outline",action:"updateStatus"});break;case v.APPOINTMENT_PENDING:a.push({label:"Tạo lịch hẹn",icon:q,variant:"primary",action:"createAppointment"});break;case v.APPOINTMENT_SCHEDULED:a.push({label:"Khám sàng lọc",icon:F,variant:"info",action:"healthCheck"});break;case v.HEALTH_CHECK_PASSED:a.push({label:"Lấy máu",icon:C,variant:"success",action:"bloodCollection"});break;case v.BLOOD_COLLECTED:a.push({label:"Kết quả xét nghiệm",icon:M,variant:"warning",action:"testResult"});break}return a})(i);return e.jsx("div",{className:"flex space-x-2",children:o.map((t,a)=>e.jsxs(j,{size:"sm",variant:t.variant,onClick:()=>p(t.action,i),children:[e.jsx(t.icon,{size:16,className:"mr-1"}),t.label]},a))})},te=({processes:i,isLoading:p,onActionClick:c})=>{const o=[{key:"id",title:"ID",sortable:!0,render:t=>`#${t}`},{key:"donor",title:"Người hiến",render:t=>e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx(I,{size:16,className:"text-gray-400"}),e.jsxs("div",{children:[e.jsx("div",{className:"font-medium",children:(t==null?void 0:t.fullName)||"N/A"}),e.jsx("div",{className:"text-sm text-gray-500",children:t==null?void 0:t.email})]})]})},{key:"status",title:"Trạng thái",render:t=>e.jsx(K,{status:t})},{key:"createdAt",title:"Ngày đăng ký",sortable:!0,render:t=>e.jsx(G,{dateTime:t})},{key:"appointment",title:"Lịch hẹn",render:t=>t?e.jsxs("div",{className:"text-sm",children:[e.jsxs("div",{className:"flex items-center space-x-1",children:[e.jsx(q,{size:14}),e.jsx("span",{children:O(t.appointmentDateTime)})]}),e.jsxs("div",{className:"flex items-center space-x-1 text-gray-500",children:[e.jsx(P,{size:14}),e.jsx("span",{children:t.location})]})]}):e.jsx("span",{className:"text-gray-400",children:"Chưa có"})},{key:"collectedVolumeMl",title:"Thể tích (ml)",render:t=>t?`${t} ml`:"-"},{key:"actions",title:"Hành động",render:(t,a)=>e.jsx(ee,{process:a,onActionClick:c})}];return e.jsx(U,{data:i,columns:o,loading:p})},se=({processId:i,isOpen:p,onClose:c,onSuccess:o})=>{const[t,a]=f.useState({bloodPressureSystolic:"",bloodPressureDiastolic:"",heartRate:"",temperature:"",weight:"",hemoglobin:"",notes:"",passed:!0}),[l,d]=f.useState(!1),g=async s=>{var n,u;s.preventDefault(),d(!0);try{await N.recordHealthCheck(i,t),m.success("Đã ghi nhận kết quả khám sàng lọc"),o&&typeof o=="function"&&o(),c()}catch(r){console.error("Health check error:",r);const h=((u=(n=r==null?void 0:r.response)==null?void 0:n.data)==null?void 0:u.message)||(r==null?void 0:r.message)||"Lỗi khi ghi nhận kết quả khám sàng lọc";m.error(h)}finally{d(!1)}};return e.jsx(w,{isOpen:p,onClose:c,title:"Ghi nhận khám sàng lọc",children:e.jsxs("form",{onSubmit:g,className:"space-y-4",children:[e.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[e.jsx(b,{label:"Huyết áp tâm thu",type:"number",value:t.bloodPressureSystolic,onChange:s=>a(n=>({...n,bloodPressureSystolic:s.target.value})),placeholder:"120",icon:C,required:!0}),e.jsx(b,{label:"Huyết áp tâm trương",type:"number",value:t.bloodPressureDiastolic,onChange:s=>a(n=>({...n,bloodPressureDiastolic:s.target.value})),placeholder:"80",icon:C,required:!0})]}),e.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[e.jsx(b,{label:"Nhịp tim (bpm)",type:"number",value:t.heartRate,onChange:s=>a(n=>({...n,heartRate:s.target.value})),placeholder:"72",icon:F,required:!0}),e.jsx(b,{label:"Nhiệt độ (°C)",type:"number",step:"0.1",value:t.temperature,onChange:s=>a(n=>({...n,temperature:s.target.value})),placeholder:"36.5",icon:Y,required:!0})]}),e.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[e.jsx(b,{label:"Cân nặng (kg)",type:"number",value:t.weight,onChange:s=>a(n=>({...n,weight:s.target.value})),placeholder:"65",icon:X,required:!0}),e.jsx(b,{label:"Hemoglobin (g/dL)",type:"number",step:"0.1",value:t.hemoglobin,onChange:s=>a(n=>({...n,hemoglobin:s.target.value})),placeholder:"13.5",required:!0})]}),e.jsx(b,{label:"Ghi chú",value:t.notes,onChange:s=>a(n=>({...n,notes:s.target.value})),placeholder:"Thêm ghi chú nếu cần..."}),e.jsxs("div",{className:"flex items-center space-x-3",children:[e.jsxs("label",{className:"flex items-center",children:[e.jsx("input",{type:"radio",name:"passed",checked:t.passed===!0,onChange:()=>a(s=>({...s,passed:!0})),className:"mr-2"}),e.jsx("span",{className:"text-green-600 font-medium",children:"Đạt tiêu chuẩn"})]}),e.jsxs("label",{className:"flex items-center",children:[e.jsx("input",{type:"radio",name:"passed",checked:t.passed===!1,onChange:()=>a(s=>({...s,passed:!1})),className:"mr-2"}),e.jsx("span",{className:"text-red-600 font-medium",children:"Không đạt"})]})]}),e.jsxs("div",{className:"flex justify-end space-x-2 pt-4",children:[e.jsx(j,{type:"button",variant:"outline",onClick:c,children:"Hủy"}),e.jsx(j,{type:"submit",disabled:l,children:l?"Đang lưu...":"Lưu kết quả"})]})]})})},ae=({processId:i,isOpen:p,onClose:c,onSuccess:o})=>{const[t,a]=f.useState({collectedVolumeMl:450,notes:""}),[l,d]=f.useState(!1),g=n=>{const{name:u,value:r}=n.target;a(h=>({...h,[u]:r}))},s=async n=>{if(n.preventDefault(),!i){m.error("Không có ID quy trình");return}d(!0);try{await N.markBloodAsCollected(i,t),m.success("Đánh dấu đã lấy máu thành công"),o(),c(),a({collectedVolumeMl:450,notes:""})}catch(u){console.error("Error marking blood as collected:",u),m.error("Không thể đánh dấu đã lấy máu")}finally{d(!1)}};return e.jsx(w,{isOpen:p,onClose:c,title:"Ghi nhận lấy máu",children:e.jsxs("form",{onSubmit:s,className:"space-y-4",children:[e.jsxs("div",{className:"flex items-center mb-4",children:[e.jsx(C,{className:"w-5 h-5 text-red-600 mr-2"}),e.jsx("span",{className:"text-sm text-gray-600",children:"Ghi nhận việc lấy máu từ người hiến"})]}),e.jsx(b,{label:"Thể tích thu thập (ml)",type:"number",name:"collectedVolumeMl",value:t.collectedVolumeMl,onChange:g,min:"100",max:"500",step:"10",required:!0,disabled:l,placeholder:"450"}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:"Ghi chú"}),e.jsx("textarea",{name:"notes",value:t.notes,onChange:g,disabled:l,rows:3,className:"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500",placeholder:"Nhập ghi chú về quá trình lấy máu..."})]}),e.jsxs("div",{className:"flex justify-end space-x-2 pt-4",children:[e.jsx(j,{type:"button",variant:"outline",onClick:c,disabled:l,children:"Hủy"}),e.jsxs(j,{type:"submit",variant:"success",disabled:l,isLoading:l,children:[e.jsx(C,{className:"w-4 h-4 mr-2"}),"Xác nhận lấy máu"]})]})]})})},ne=({processId:i,isOpen:p,onClose:c,onSuccess:o})=>{const[t,a]=f.useState({isSafe:!0,bloodUnitId:"",testResults:"",notes:""}),[l,d]=f.useState(!1),g=n=>{const{name:u,value:r,type:h,checked:y}=n.target;a(S=>({...S,[u]:h==="checkbox"?y:r}))},s=async n=>{if(n.preventDefault(),!i){m.error("Không có ID quy trình");return}if(!t.bloodUnitId.trim()){m.error("Vui lòng nhập mã đơn vị máu");return}d(!0);try{await N.recordBloodTestResult(i,t),m.success("Ghi nhận kết quả xét nghiệm thành công"),o(),c(),a({isSafe:!0,bloodUnitId:"",testResults:"",notes:""})}catch(u){console.error("Error recording test result:",u),m.error("Không thể ghi nhận kết quả xét nghiệm")}finally{d(!1)}};return e.jsx(w,{isOpen:p,onClose:c,title:"Ghi nhận kết quả xét nghiệm",children:e.jsxs("form",{onSubmit:s,className:"space-y-4",children:[e.jsxs("div",{className:"flex items-center mb-4",children:[e.jsx(M,{className:"w-5 h-5 text-blue-600 mr-2"}),e.jsx("span",{className:"text-sm text-gray-600",children:"Ghi nhận kết quả xét nghiệm máu"})]}),e.jsx(b,{label:"Mã đơn vị máu",type:"text",name:"bloodUnitId",value:t.bloodUnitId,onChange:g,required:!0,disabled:l,placeholder:"VD: BU202512251234"}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-3",children:"Kết quả xét nghiệm"}),e.jsxs("div",{className:"flex items-center space-x-6",children:[e.jsxs("label",{className:"flex items-center",children:[e.jsx("input",{type:"radio",name:"isSafe",value:!0,checked:t.isSafe===!0,onChange:()=>a(n=>({...n,isSafe:!0})),disabled:l,className:"h-4 w-4 text-green-600 focus:ring-green-500 border-gray-300"}),e.jsx($,{className:"w-4 h-4 text-green-600 ml-2 mr-1"}),e.jsx("span",{className:"text-sm text-green-700",children:"An toàn"})]}),e.jsxs("label",{className:"flex items-center",children:[e.jsx("input",{type:"radio",name:"isSafe",value:!1,checked:t.isSafe===!1,onChange:()=>a(n=>({...n,isSafe:!1})),disabled:l,className:"h-4 w-4 text-red-600 focus:ring-red-500 border-gray-300"}),e.jsx(z,{className:"w-4 h-4 text-red-600 ml-2 mr-1"}),e.jsx("span",{className:"text-sm text-red-700",children:"Không an toàn"})]})]})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:"Chi tiết kết quả xét nghiệm"}),e.jsx("textarea",{name:"testResults",value:t.testResults,onChange:g,disabled:l,rows:3,className:"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500",placeholder:"VD: HIV (-), HBV (-), HCV (-), Syphilis (-)"})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:"Ghi chú thêm"}),e.jsx("textarea",{name:"notes",value:t.notes,onChange:g,disabled:l,rows:2,className:"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500",placeholder:"Nhập ghi chú thêm về kết quả xét nghiệm..."})]}),e.jsxs("div",{className:"flex justify-end space-x-2 pt-4",children:[e.jsx(j,{type:"button",variant:"outline",onClick:c,disabled:l,children:"Hủy"}),e.jsxs(j,{type:"submit",variant:t.isSafe?"success":"warning",disabled:l,isLoading:l,children:[e.jsx(M,{className:"w-4 h-4 mr-2"}),"Lưu kết quả"]})]})]})})},re=({selectedProcess:i,modals:p,forms:c,onModalClose:o,onFormChange:t,onSubmit:a})=>{const{showStatusModal:l,showHealthCheckModal:d,showCollectionModal:g,showTestResultModal:s,showAppointmentModal:n}=p,{statusForm:u,appointmentForm:r}=c;return e.jsxs(e.Fragment,{children:[e.jsx(w,{isOpen:l,onClose:()=>o("status"),title:"Cập nhật trạng thái",children:e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:"Trạng thái mới"}),e.jsxs("select",{value:u.newStatus,onChange:h=>t("status","newStatus",h.target.value),className:"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500",children:[e.jsx("option",{value:"",children:"Chọn trạng thái"}),e.jsx("option",{value:v.APPOINTMENT_PENDING,children:"Chờ đặt lịch hẹn"}),e.jsx("option",{value:v.REJECTED,children:"Từ chối"})]})]}),e.jsx(b,{label:"Ghi chú",value:u.note,onChange:h=>t("status","note",h.target.value),placeholder:"Nhập ghi chú..."}),e.jsxs("div",{className:"flex justify-end space-x-2",children:[e.jsx(j,{variant:"outline",onClick:()=>o("status"),children:"Hủy"}),e.jsx(j,{onClick:()=>a("status"),children:"Cập nhật"})]})]})}),e.jsx(se,{processId:i==null?void 0:i.id,isOpen:d,onClose:()=>o("healthCheck"),onSuccess:()=>a("healthCheck")}),e.jsx(ae,{processId:i==null?void 0:i.id,isOpen:g,onClose:()=>o("collection"),onSuccess:()=>a("collection")}),e.jsx(ne,{processId:i==null?void 0:i.id,isOpen:s,onClose:()=>o("testResult"),onSuccess:()=>a("testResult")}),e.jsx(w,{isOpen:n,onClose:()=>o("appointment"),title:"Tạo lịch hẹn",children:e.jsxs("div",{className:"space-y-4",children:[e.jsx(b,{label:"Ngày giờ hẹn",type:"datetime-local",value:r.appointmentDateTime,onChange:h=>t("appointment","appointmentDateTime",h.target.value)}),e.jsx(b,{label:"Địa điểm",value:r.location,onChange:h=>t("appointment","location",h.target.value),placeholder:"Bệnh viện Huyết học - FPT"}),e.jsx(b,{label:"Ghi chú",value:r.notes,onChange:h=>t("appointment","notes",h.target.value),placeholder:"Nhập ghi chú..."}),e.jsxs("div",{className:"flex justify-end space-x-2",children:[e.jsx(j,{variant:"outline",onClick:()=>o("appointment"),children:"Hủy"}),e.jsx(j,{onClick:()=>a("appointment"),children:"Tạo lịch hẹn"})]})]})})]})},oe=()=>{const[i,p]=f.useState([]),[c,o]=f.useState(!0),[t,a]=f.useState(null),l=async()=>{o(!0);try{const r=await N.getAllDonationRequests();p(r.data||[])}catch(r){console.error("Error fetching donation processes:",r),m.error("Không thể tải danh sách quy trình hiến máu")}finally{o(!1)}},d=async(r,h)=>{try{return await N.updateDonationStatus(r,h),m.success("Cập nhật trạng thái thành công"),l(),!0}catch(y){return console.error("Error updating status:",y),m.error("Không thể cập nhật trạng thái"),!1}},g=async(r,h)=>{try{return await N.recordHealthCheck(r,h),m.success("Ghi nhận kết quả khám sàng lọc thành công"),l(),!0}catch(y){return console.error("Error recording health check:",y),m.error("Không thể ghi nhận kết quả khám sàng lọc"),!1}},s=async(r,h)=>{try{return await N.markBloodAsCollected(r,h),m.success("Đánh dấu đã lấy máu thành công"),l(),!0}catch(y){return console.error("Error marking blood as collected:",y),m.error("Không thể đánh dấu đã lấy máu"),!1}},n=async(r,h)=>{try{return await N.recordBloodTestResult(r,h),m.success("Ghi nhận kết quả xét nghiệm thành công"),l(),!0}catch(y){return console.error("Error recording test result:",y),m.error("Không thể ghi nhận kết quả xét nghiệm"),!1}},u=async r=>{try{return await Z.createAppointment(r),m.success("Tạo lịch hẹn thành công"),l(),!0}catch(h){return console.error("Error creating appointment:",h),m.error("Không thể tạo lịch hẹn"),!1}};return f.useEffect(()=>{l()},[]),{processes:i,isLoading:c,selectedProcess:t,setSelectedProcess:a,fetchProcesses:l,updateStatus:d,recordHealthCheck:g,markBloodAsCollected:s,recordTestResult:n,createAppointment:u}},le=()=>{const[i,p]=f.useState({showStatusModal:!1,showHealthCheckModal:!1,showCollectionModal:!1,showTestResultModal:!1,showAppointmentModal:!1}),[c,o]=f.useState({statusForm:{newStatus:"",note:""},healthCheckForm:{isEligible:!0,bloodPressure:"",heartRate:"",weight:"",notes:""},collectionForm:{collectedVolumeMl:450},testResultForm:{isSafe:!0,bloodUnitId:"",notes:""},appointmentForm:{appointmentDateTime:"",location:"",notes:"",staffId:null}});return{modals:i,forms:c,openModal:(d,g=null)=>{switch(p(s=>({...s,[`show${d.charAt(0).toUpperCase()+d.slice(1)}Modal`]:!0})),d){case"status":o(s=>({...s,statusForm:{newStatus:"",note:""}}));break;case"healthCheck":o(s=>({...s,healthCheckForm:{isEligible:!0,bloodPressure:"",heartRate:"",weight:"",notes:""}}));break;case"collection":o(s=>({...s,collectionForm:{collectedVolumeMl:450}}));break;case"testResult":o(s=>({...s,testResultForm:{isSafe:!0,bloodUnitId:`BU${Date.now()}`,notes:""}}));break;case"appointment":o(s=>({...s,appointmentForm:{appointmentDateTime:"",location:"Bệnh viện Huyết học - FPT",notes:"",staffId:null}}));break}},closeModal:d=>{p(g=>({...g,[`show${d.charAt(0).toUpperCase()+d.slice(1)}Modal`]:!1}))},updateForm:(d,g,s)=>{o(n=>({...n,[`${d}Form`]:{...n[`${d}Form`],[g]:s}}))}}},qe=()=>{const{processes:i,isLoading:p,selectedProcess:c,setSelectedProcess:o,fetchProcesses:t,updateStatus:a,recordHealthCheck:l,markBloodAsCollected:d,recordTestResult:g,createAppointment:s}=oe(),{modals:n,forms:u,openModal:r,closeModal:h,updateForm:y}=le(),S=(k,x)=>{switch(o(x),k){case"updateStatus":r("status",x);break;case"createAppointment":r("appointment",x);break;case"healthCheck":r("healthCheck",x);break;case"bloodCollection":r("collection",x);break;case"testResult":r("testResult",x);break;default:console.warn("Unknown action:",k)}},A=k=>{h(k),o(null)},R=(k,x,D)=>{y(k,x,D)},E=async k=>{if(!c){m.error("Không có quy trình được chọn");return}let x=!1;switch(k){case"status":if(!u.statusForm.newStatus){m.error("Vui lòng chọn trạng thái mới");return}x=await a(c.id,u.statusForm);break;case"healthCheck":x=await l(c.id,u.healthCheckForm);break;case"collection":x=await d(c.id,u.collectionForm);break;case"testResult":x=await g(c.id,u.testResultForm);break;case"appointment":const D={processId:c.id,...u.appointmentForm};x=await s(D);break;default:console.warn("Unknown submit type:",k);return}x&&A(k)},H=[{label:"Làm mới",icon:L,variant:"outline",onClick:t}];return e.jsx(B,{title:"Quản lý Quy trình Hiến máu",description:"Theo dõi và quản lý toàn bộ quy trình hiến máu từ đăng ký đến hoàn thành",headerActions:H,children:e.jsxs("div",{className:"p-6",children:[e.jsx(V,{isLoading:p,hasData:i.length>0,loadingMessage:"Đang tải danh sách quy trình hiến máu...",emptyMessage:"Chưa có quy trình hiến máu nào",children:e.jsx(te,{processes:i,isLoading:p,onActionClick:S})}),e.jsx(re,{selectedProcess:c,modals:n,forms:u,onModalClose:A,onFormChange:R,onSubmit:E})]})})};export{qe as default};
